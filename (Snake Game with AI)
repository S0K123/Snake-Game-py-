import pygame
import random

# Initialize Pygame
import pygame
pygame.init()

# Screen dimensions
width, height = 600, 400
screen = pygame.display.set_mode((width, height))
pygame.display.set_caption("Snake Game with AI")

# Colors
black = (0, 0, 0)
white = (255, 255, 255)
red = (255, 0, 0)
green = (0, 255, 0)

# Snake and food
snake_block = 20
snake_speed = 15

def draw_snake(snake_block, snake_list):
    for block in snake_list:
        pygame.draw.rect(screen, green, [block[0], block[1], snake_block, snake_block])

def ai_move(snake_head, food_position):
    x, y = snake_head
    food_x, food_y = food_position

    if x < food_x:
        return "right"
    elif x > food_x:
        return "left"
    elif y < food_y:
        return "down"
    elif y > food_y:
        return "up"
    else:
        return "right"  # Default move

def game_loop():
    game_over = False
    x, y = width // 2, height // 2
    x_change, y_change = 0, 0
    snake_list = []
    snake_length = 1

    food_x = round(random.randrange(0, width - snake_block) / snake_block) * snake_block
    food_y = round(random.randrange(0, height - snake_block) / snake_block) * snake_block

    while not game_over:
        for event in pygame.event.get():
            if event.type == pygame.QUIT:
                game_over = True

        # AI movement
        direction = ai_move((x, y), (food_x, food_y))
        if direction == "left":
            x_change = -snake_block
            y_change = 0
        elif direction == "right":
            x_change = snake_block
            y_change = 0
        elif direction == "up":
            y_change = -snake_block
            x_change = 0
        elif direction == "down":
            y_change = snake_block
            x_change = 0

        # Update snake position
        x += x_change
        y += y_change

        # Check boundaries
        if x >= width or x < 0 or y >= height or y < 0:
            game_over = True

        screen.fill(black)
        pygame.draw.rect(screen, red, [food_x, food_y, snake_block, snake_block])
        snake_head = [x, y]
        snake_list.append(snake_head)
        if len(snake_list) > snake_length:
            del snake_list[0]

        # Check if snake collides with itself
        for block in snake_list[:-1]:
            if block == snake_head:
                game_over = True

        draw_snake(snake_block, snake_list)
        pygame.display.update()

        # Check if snake eats food
        if x == food_x and y == food_y:
            food_x = round(random.randrange(0, width - snake_block) / snake_block) * snake_block
            food_y = round(random.randrange(0, height - snake_block) / snake_block) * snake_block
            snake_length += 1

        pygame.time.Clock().tick(snake_speed)

    pygame.quit()
    quit()

game_loop()
